(function () {
	'use strict';

	const data8 = [
		{
			id: "card1",
			name: "Battle city",
			pdfLink: "./files/instructions8bit/Battle_city_инструкция-печать.pdf",
			videoLink: "#",
		},
		{
			id: "card2",
			name: "Darkwing Duck",
			pdfLink: "./files/instructions8bit/darkwing_duck_инструкция_print.pdf",
			videoLink: "#",
		},
		{
			id: "card3",
			name: "Duck Hunt",
			pdfLink: "./files/instructions8bit/duck_hunt_инструкция_print.pdf",
			videoLink: "#",
		},
		{
			id: "card4",
			name: "Super Mario Bros",
			pdfLink: "./files/instructions8bit/Mario_инструкция_print.pdf",
			videoLink: "#",
		},
		{
			id: "card5",
			name: "Teenage Mutant Ninja Turtles Tournament Fighters ",
			pdfLink: "./files/instructions8bit/TMNT_инструкция_print.pdf",
			videoLink: "#",
		},
	];

	const data16 = [
		{id: "card6", name: "Aladdin", pdfLink: "#", videoLink: "#"},
		{id: "card7", name: "Comix Zone", pdfLink: "#", videoLink: "#"},
		{id: "card8", name: "Earthworm Jim II", pdfLink: "#", videoLink: "#"},
		{id: "card9", name: "Sonic the Hedgehog 2", pdfLink: "#", videoLink: "#"},
		{
			id: "card10",
			name: "Ultimate Mortal Kombat 3",
			pdfLink: "#",
			videoLink: "#",
		},
	];

	const searchInput = document.getElementById("searchInput");
	const dropdown = document.getElementById("dropdown");
	const cardsContainer8 = document.getElementById("cardsContainer8");
	const cardsContainer16 = document.getElementById("cardsContainer16");
	const data = [...data8, ...data16];

	// Функция отображения карточек
	function displayCards(cards, container) {
		container.innerHTML = ""; // Очистить контейнер
		if (cards.length === 0) {
			const noResults = document.createElement("div");
			noResults.classList.add("none");
			noResults.textContent = "Нет результатов";
			container.appendChild(noResults);
		} else {
			cards.forEach((card) => {
				// const cardElement = document.createElement("div");
				// cardElement.classList.add("card");
				// cardElement.textContent = `${card.name}`;
				// container.appendChild(cardElement);
				const cardElement = document.createElement("div");
				cardElement.classList.add("instructions__card__cardItem");
				cardElement.id = `${card.id}`;

				// Создаем элемент <p> и добавляем имя
				const nameElement = document.createElement("p");
				nameElement.textContent = `${card.name}`;
				cardElement.appendChild(nameElement);

				// // Создаем первую кнопку
				// const button1 = document.createElement("a");
				// button1.classList.add("instructions__card__instructionBtn");
				// button1.href = `${card.pdfLink}`;
				// button1.target = "_blank"; // Открытие в новом окне
				// button1.textContent = "инструкция pdf";
				// cardElement.appendChild(button1);

				// // Создаем вторую кнопку
				// const button2 = document.createElement("a");
				// button2.classList.add("instructions__card__videoInstructionBtn");
				// button2.href = `${card.videoLink}`;
				// button2.target = "_blank"; // Открытие в новом окне
				// button2.textContent = "видео-инструкция";
				// cardElement.appendChild(button2);
				const button1 = document.createElement("a");
				button1.classList.add("instructions__card__instructionBtn");
				button1.href = `${card.pdfLink}`;
				button1.target = "_blank"; // Открытие в новом окне

				const span1 = document.createElement("span");
				span1.textContent = "инструкция pdf";
				button1.appendChild(span1);

				cardElement.appendChild(button1);

				// Создаем вторую кнопку
				const button2 = document.createElement("a");
				button2.classList.add("instructions__card__videoInstructionBtn");
				button2.href = `${card.videoLink}`;
				button2.target = "_blank"; // Открытие в новом окне

				const span2 = document.createElement("span");
				span2.textContent = "видео-инструкция";
				button2.appendChild(span2);

				cardElement.appendChild(button2);
				container.appendChild(cardElement);
			});
		}
	}

	// Отображение всех карточек при загрузке страницы
	displayCards(data8, cardsContainer8);
	displayCards(data16, cardsContainer16);

	// Обработка ввода текста
	searchInput.addEventListener("input", () => {
		const query = searchInput.value.toLowerCase();
		dropdown.innerHTML = ""; // Очистить выпадающее меню

		if (query) {
			const filteredData = data.filter((item) =>
				item.name.toLowerCase().includes(query)
			);

			// Обновить блоки cardsContainer8 и cardsContainer16
			const filteredData8 = data8.filter((item) =>
				item.name.toLowerCase().includes(query)
			);
			const filteredData16 = data16.filter((item) =>
				item.name.toLowerCase().includes(query)
			);

			displayCards(filteredData8, cardsContainer8);
			displayCards(filteredData16, cardsContainer16);

			// Заполнить выпадающий список
			filteredData.forEach((item) => {
				const dropdownItem = document.createElement("div");
				dropdownItem.classList.add("dropdown-item");
				dropdownItem.textContent = item.name;
				dropdownItem.addEventListener("click", () => {
					searchInput.value = item.name; // Заполнить инпут
					dropdown.style.display = "none"; // Скрыть выпадающее меню

					// Очистить оба контейнера
					cardsContainer8.innerHTML = "";
					cardsContainer16.innerHTML = "";

					// Показать выбранную карточку в одном контейнере, а в другом пустой блок
					if (item.id <= 5) {
						displayCards([item], cardsContainer8);
						displayCards([], cardsContainer16); // Пустой блок в другом контейнере
					} else {
						displayCards([item], cardsContainer16);
						displayCards([], cardsContainer8); // Пустой блок в другом контейнере
					}
				});
				dropdown.appendChild(dropdownItem);
			});

			dropdown.style.display = filteredData.length ? "block" : "none";
		} else {
			// Показать все карточки, если инпут пуст
			displayCards(data8, cardsContainer8);
			displayCards(data16, cardsContainer16);
			dropdown.style.display = "none";
		}
	});

	// Скрыть выпадающее меню при клике вне инпута
	document.addEventListener("click", (e) => {
		if (!e.target.closest("#searchInput")) {
			dropdown.style.display = "none";
		}
	});

})();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdHJ1Y3Rpb25zLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2h0bWwvbW9kdWxlcy9zZXR0aW5ncy9pbnN0cnVjdGlvbnMvaW5zdHJ1Y3Rpb25zRGF0YS5qcyIsInNyYy9qcy9pbnN0cnVjdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGF0YTggPSBbXHJcblx0e1xyXG5cdFx0aWQ6IFwiY2FyZDFcIixcclxuXHRcdG5hbWU6IFwiQmF0dGxlIGNpdHlcIixcclxuXHRcdHBkZkxpbms6IFwiLi9maWxlcy9pbnN0cnVjdGlvbnM4Yml0L0JhdHRsZV9jaXR5X9C40L3RgdGC0YDRg9C60YbQuNGPLdC/0LXRh9Cw0YLRjC5wZGZcIixcclxuXHRcdHZpZGVvTGluazogXCIjXCIsXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogXCJjYXJkMlwiLFxyXG5cdFx0bmFtZTogXCJEYXJrd2luZyBEdWNrXCIsXHJcblx0XHRwZGZMaW5rOiBcIi4vZmlsZXMvaW5zdHJ1Y3Rpb25zOGJpdC9kYXJrd2luZ19kdWNrX9C40L3RgdGC0YDRg9C60YbQuNGPX3ByaW50LnBkZlwiLFxyXG5cdFx0dmlkZW9MaW5rOiBcIiNcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiBcImNhcmQzXCIsXHJcblx0XHRuYW1lOiBcIkR1Y2sgSHVudFwiLFxyXG5cdFx0cGRmTGluazogXCIuL2ZpbGVzL2luc3RydWN0aW9uczhiaXQvZHVja19odW50X9C40L3RgdGC0YDRg9C60YbQuNGPX3ByaW50LnBkZlwiLFxyXG5cdFx0dmlkZW9MaW5rOiBcIiNcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiBcImNhcmQ0XCIsXHJcblx0XHRuYW1lOiBcIlN1cGVyIE1hcmlvIEJyb3NcIixcclxuXHRcdHBkZkxpbms6IFwiLi9maWxlcy9pbnN0cnVjdGlvbnM4Yml0L01hcmlvX9C40L3RgdGC0YDRg9C60YbQuNGPX3ByaW50LnBkZlwiLFxyXG5cdFx0dmlkZW9MaW5rOiBcIiNcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiBcImNhcmQ1XCIsXHJcblx0XHRuYW1lOiBcIlRlZW5hZ2UgTXV0YW50IE5pbmphIFR1cnRsZXMgVG91cm5hbWVudCBGaWdodGVycyBcIixcclxuXHRcdHBkZkxpbms6IFwiLi9maWxlcy9pbnN0cnVjdGlvbnM4Yml0L1RNTlRf0LjQvdGB0YLRgNGD0LrRhtC40Y9fcHJpbnQucGRmXCIsXHJcblx0XHR2aWRlb0xpbms6IFwiI1wiLFxyXG5cdH0sXHJcbl07XHJcblxyXG5jb25zdCBkYXRhMTYgPSBbXHJcblx0e2lkOiBcImNhcmQ2XCIsIG5hbWU6IFwiQWxhZGRpblwiLCBwZGZMaW5rOiBcIiNcIiwgdmlkZW9MaW5rOiBcIiNcIn0sXHJcblx0e2lkOiBcImNhcmQ3XCIsIG5hbWU6IFwiQ29taXggWm9uZVwiLCBwZGZMaW5rOiBcIiNcIiwgdmlkZW9MaW5rOiBcIiNcIn0sXHJcblx0e2lkOiBcImNhcmQ4XCIsIG5hbWU6IFwiRWFydGh3b3JtIEppbSBJSVwiLCBwZGZMaW5rOiBcIiNcIiwgdmlkZW9MaW5rOiBcIiNcIn0sXHJcblx0e2lkOiBcImNhcmQ5XCIsIG5hbWU6IFwiU29uaWMgdGhlIEhlZGdlaG9nIDJcIiwgcGRmTGluazogXCIjXCIsIHZpZGVvTGluazogXCIjXCJ9LFxyXG5cdHtcclxuXHRcdGlkOiBcImNhcmQxMFwiLFxyXG5cdFx0bmFtZTogXCJVbHRpbWF0ZSBNb3J0YWwgS29tYmF0IDNcIixcclxuXHRcdHBkZkxpbms6IFwiI1wiLFxyXG5cdFx0dmlkZW9MaW5rOiBcIiNcIixcclxuXHR9LFxyXG5dO1xyXG5cclxuZXhwb3J0IHtkYXRhOCwgZGF0YTE2fTtcclxuIiwiaW1wb3J0IHtcclxuXHRkYXRhOCxcclxuXHRkYXRhMTYsXHJcbn0gZnJvbSBcIi4uL2h0bWwvbW9kdWxlcy9zZXR0aW5ncy9pbnN0cnVjdGlvbnMvaW5zdHJ1Y3Rpb25zRGF0YVwiO1xyXG5jb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoSW5wdXRcIik7XHJcbmNvbnN0IGRyb3Bkb3duID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkcm9wZG93blwiKTtcclxuY29uc3QgY2FyZHNDb250YWluZXI4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYXJkc0NvbnRhaW5lcjhcIik7XHJcbmNvbnN0IGNhcmRzQ29udGFpbmVyMTYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhcmRzQ29udGFpbmVyMTZcIik7XHJcbmNvbnN0IGRhdGEgPSBbLi4uZGF0YTgsIC4uLmRhdGExNl07XHJcblxyXG4vLyDQpNGD0L3QutGG0LjRjyDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC60LDRgNGC0L7Rh9C10LpcclxuZnVuY3Rpb24gZGlzcGxheUNhcmRzKGNhcmRzLCBjb250YWluZXIpIHtcclxuXHRjb250YWluZXIuaW5uZXJIVE1MID0gXCJcIjsgLy8g0J7Rh9C40YHRgtC40YLRjCDQutC+0L3RgtC10LnQvdC10YBcclxuXHRpZiAoY2FyZHMubGVuZ3RoID09PSAwKSB7XHJcblx0XHRjb25zdCBub1Jlc3VsdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0bm9SZXN1bHRzLmNsYXNzTGlzdC5hZGQoXCJub25lXCIpO1xyXG5cdFx0bm9SZXN1bHRzLnRleHRDb250ZW50ID0gXCLQndC10YIg0YDQtdC30YPQu9GM0YLQsNGC0L7QslwiO1xyXG5cdFx0Y29udGFpbmVyLmFwcGVuZENoaWxkKG5vUmVzdWx0cyk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcclxuXHRcdFx0Ly8gY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHQvLyBjYXJkRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiY2FyZFwiKTtcclxuXHRcdFx0Ly8gY2FyZEVsZW1lbnQudGV4dENvbnRlbnQgPSBgJHtjYXJkLm5hbWV9YDtcclxuXHRcdFx0Ly8gY29udGFpbmVyLmFwcGVuZENoaWxkKGNhcmRFbGVtZW50KTtcclxuXHRcdFx0Y29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHRjYXJkRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaW5zdHJ1Y3Rpb25zX19jYXJkX19jYXJkSXRlbVwiKTtcclxuXHRcdFx0Y2FyZEVsZW1lbnQuaWQgPSBgJHtjYXJkLmlkfWA7XHJcblxyXG5cdFx0XHQvLyDQodC+0LfQtNCw0LXQvCDRjdC70LXQvNC10L3RgiA8cD4g0Lgg0LTQvtCx0LDQstC70Y/QtdC8INC40LzRj1xyXG5cdFx0XHRjb25zdCBuYW1lRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG5cdFx0XHRuYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IGAke2NhcmQubmFtZX1gO1xyXG5cdFx0XHRjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChuYW1lRWxlbWVudCk7XHJcblxyXG5cdFx0XHQvLyAvLyDQodC+0LfQtNCw0LXQvCDQv9C10YDQstGD0Y4g0LrQvdC+0L/QutGDXHJcblx0XHRcdC8vIGNvbnN0IGJ1dHRvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuXHRcdFx0Ly8gYnV0dG9uMS5jbGFzc0xpc3QuYWRkKFwiaW5zdHJ1Y3Rpb25zX19jYXJkX19pbnN0cnVjdGlvbkJ0blwiKTtcclxuXHRcdFx0Ly8gYnV0dG9uMS5ocmVmID0gYCR7Y2FyZC5wZGZMaW5rfWA7XHJcblx0XHRcdC8vIGJ1dHRvbjEudGFyZ2V0ID0gXCJfYmxhbmtcIjsgLy8g0J7RgtC60YDRi9GC0LjQtSDQsiDQvdC+0LLQvtC8INC+0LrQvdC1XHJcblx0XHRcdC8vIGJ1dHRvbjEudGV4dENvbnRlbnQgPSBcItC40L3RgdGC0YDRg9C60YbQuNGPIHBkZlwiO1xyXG5cdFx0XHQvLyBjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChidXR0b24xKTtcclxuXHJcblx0XHRcdC8vIC8vINCh0L7Qt9C00LDQtdC8INCy0YLQvtGA0YPRjiDQutC90L7Qv9C60YNcclxuXHRcdFx0Ly8gY29uc3QgYnV0dG9uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG5cdFx0XHQvLyBidXR0b24yLmNsYXNzTGlzdC5hZGQoXCJpbnN0cnVjdGlvbnNfX2NhcmRfX3ZpZGVvSW5zdHJ1Y3Rpb25CdG5cIik7XHJcblx0XHRcdC8vIGJ1dHRvbjIuaHJlZiA9IGAke2NhcmQudmlkZW9MaW5rfWA7XHJcblx0XHRcdC8vIGJ1dHRvbjIudGFyZ2V0ID0gXCJfYmxhbmtcIjsgLy8g0J7RgtC60YDRi9GC0LjQtSDQsiDQvdC+0LLQvtC8INC+0LrQvdC1XHJcblx0XHRcdC8vIGJ1dHRvbjIudGV4dENvbnRlbnQgPSBcItCy0LjQtNC10L4t0LjQvdGB0YLRgNGD0LrRhtC40Y9cIjtcclxuXHRcdFx0Ly8gY2FyZEVsZW1lbnQuYXBwZW5kQ2hpbGQoYnV0dG9uMik7XHJcblx0XHRcdGNvbnN0IGJ1dHRvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuXHRcdFx0YnV0dG9uMS5jbGFzc0xpc3QuYWRkKFwiaW5zdHJ1Y3Rpb25zX19jYXJkX19pbnN0cnVjdGlvbkJ0blwiKTtcclxuXHRcdFx0YnV0dG9uMS5ocmVmID0gYCR7Y2FyZC5wZGZMaW5rfWA7XHJcblx0XHRcdGJ1dHRvbjEudGFyZ2V0ID0gXCJfYmxhbmtcIjsgLy8g0J7RgtC60YDRi9GC0LjQtSDQsiDQvdC+0LLQvtC8INC+0LrQvdC1XHJcblxyXG5cdFx0XHRjb25zdCBzcGFuMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG5cdFx0XHRzcGFuMS50ZXh0Q29udGVudCA9IFwi0LjQvdGB0YLRgNGD0LrRhtC40Y8gcGRmXCI7XHJcblx0XHRcdGJ1dHRvbjEuYXBwZW5kQ2hpbGQoc3BhbjEpO1xyXG5cclxuXHRcdFx0Y2FyZEVsZW1lbnQuYXBwZW5kQ2hpbGQoYnV0dG9uMSk7XHJcblxyXG5cdFx0XHQvLyDQodC+0LfQtNCw0LXQvCDQstGC0L7RgNGD0Y4g0LrQvdC+0L/QutGDXHJcblx0XHRcdGNvbnN0IGJ1dHRvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuXHRcdFx0YnV0dG9uMi5jbGFzc0xpc3QuYWRkKFwiaW5zdHJ1Y3Rpb25zX19jYXJkX192aWRlb0luc3RydWN0aW9uQnRuXCIpO1xyXG5cdFx0XHRidXR0b24yLmhyZWYgPSBgJHtjYXJkLnZpZGVvTGlua31gO1xyXG5cdFx0XHRidXR0b24yLnRhcmdldCA9IFwiX2JsYW5rXCI7IC8vINCe0YLQutGA0YvRgtC40LUg0LIg0L3QvtCy0L7QvCDQvtC60L3QtVxyXG5cclxuXHRcdFx0Y29uc3Qgc3BhbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuXHRcdFx0c3BhbjIudGV4dENvbnRlbnQgPSBcItCy0LjQtNC10L4t0LjQvdGB0YLRgNGD0LrRhtC40Y9cIjtcclxuXHRcdFx0YnV0dG9uMi5hcHBlbmRDaGlsZChzcGFuMik7XHJcblxyXG5cdFx0XHRjYXJkRWxlbWVudC5hcHBlbmRDaGlsZChidXR0b24yKTtcclxuXHRcdFx0Y29udGFpbmVyLmFwcGVuZENoaWxkKGNhcmRFbGVtZW50KTtcclxuXHRcdH0pO1xyXG5cdH1cclxufVxyXG5cclxuLy8g0J7RgtC+0LHRgNCw0LbQtdC90LjQtSDQstGB0LXRhSDQutCw0YDRgtC+0YfQtdC6INC/0YDQuCDQt9Cw0LPRgNGD0LfQutC1INGB0YLRgNCw0L3QuNGG0YtcclxuZGlzcGxheUNhcmRzKGRhdGE4LCBjYXJkc0NvbnRhaW5lcjgpO1xyXG5kaXNwbGF5Q2FyZHMoZGF0YTE2LCBjYXJkc0NvbnRhaW5lcjE2KTtcclxuXHJcbi8vINCe0LHRgNCw0LHQvtGC0LrQsCDQstCy0L7QtNCwINGC0LXQutGB0YLQsFxyXG5zZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG5cdGNvbnN0IHF1ZXJ5ID0gc2VhcmNoSW5wdXQudmFsdWUudG9Mb3dlckNhc2UoKTtcclxuXHRkcm9wZG93bi5pbm5lckhUTUwgPSBcIlwiOyAvLyDQntGH0LjRgdGC0LjRgtGMINCy0YvQv9Cw0LTQsNGO0YnQtdC1INC80LXQvdGOXHJcblxyXG5cdGlmIChxdWVyeSkge1xyXG5cdFx0Y29uc3QgZmlsdGVyZWREYXRhID0gZGF0YS5maWx0ZXIoKGl0ZW0pID0+XHJcblx0XHRcdGl0ZW0ubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5KVxyXG5cdFx0KTtcclxuXHJcblx0XHQvLyDQntCx0L3QvtCy0LjRgtGMINCx0LvQvtC60LggY2FyZHNDb250YWluZXI4INC4IGNhcmRzQ29udGFpbmVyMTZcclxuXHRcdGNvbnN0IGZpbHRlcmVkRGF0YTggPSBkYXRhOC5maWx0ZXIoKGl0ZW0pID0+XHJcblx0XHRcdGl0ZW0ubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5KVxyXG5cdFx0KTtcclxuXHRcdGNvbnN0IGZpbHRlcmVkRGF0YTE2ID0gZGF0YTE2LmZpbHRlcigoaXRlbSkgPT5cclxuXHRcdFx0aXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMocXVlcnkpXHJcblx0XHQpO1xyXG5cclxuXHRcdGRpc3BsYXlDYXJkcyhmaWx0ZXJlZERhdGE4LCBjYXJkc0NvbnRhaW5lcjgpO1xyXG5cdFx0ZGlzcGxheUNhcmRzKGZpbHRlcmVkRGF0YTE2LCBjYXJkc0NvbnRhaW5lcjE2KTtcclxuXHJcblx0XHQvLyDQl9Cw0L/QvtC70L3QuNGC0Ywg0LLRi9C/0LDQtNCw0Y7RidC40Lkg0YHQv9C40YHQvtC6XHJcblx0XHRmaWx0ZXJlZERhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG5cdFx0XHRjb25zdCBkcm9wZG93bkl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHRkcm9wZG93bkl0ZW0uY2xhc3NMaXN0LmFkZChcImRyb3Bkb3duLWl0ZW1cIik7XHJcblx0XHRcdGRyb3Bkb3duSXRlbS50ZXh0Q29udGVudCA9IGl0ZW0ubmFtZTtcclxuXHRcdFx0ZHJvcGRvd25JdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcblx0XHRcdFx0c2VhcmNoSW5wdXQudmFsdWUgPSBpdGVtLm5hbWU7IC8vINCX0LDQv9C+0LvQvdC40YLRjCDQuNC90L/Rg9GCXHJcblx0XHRcdFx0ZHJvcGRvd24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiOyAvLyDQodC60YDRi9GC0Ywg0LLRi9C/0LDQtNCw0Y7RidC10LUg0LzQtdC90Y5cclxuXHJcblx0XHRcdFx0Ly8g0J7Rh9C40YHRgtC40YLRjCDQvtCx0LAg0LrQvtC90YLQtdC50L3QtdGA0LBcclxuXHRcdFx0XHRjYXJkc0NvbnRhaW5lcjguaW5uZXJIVE1MID0gXCJcIjtcclxuXHRcdFx0XHRjYXJkc0NvbnRhaW5lcjE2LmlubmVySFRNTCA9IFwiXCI7XHJcblxyXG5cdFx0XHRcdC8vINCf0L7QutCw0LfQsNGC0Ywg0LLRi9Cx0YDQsNC90L3Rg9GOINC60LDRgNGC0L7Rh9C60YMg0LIg0L7QtNC90L7QvCDQutC+0L3RgtC10LnQvdC10YDQtSwg0LAg0LIg0LTRgNGD0LPQvtC8INC/0YPRgdGC0L7QuSDQsdC70L7QulxyXG5cdFx0XHRcdGlmIChpdGVtLmlkIDw9IDUpIHtcclxuXHRcdFx0XHRcdGRpc3BsYXlDYXJkcyhbaXRlbV0sIGNhcmRzQ29udGFpbmVyOCk7XHJcblx0XHRcdFx0XHRkaXNwbGF5Q2FyZHMoW10sIGNhcmRzQ29udGFpbmVyMTYpOyAvLyDQn9GD0YHRgtC+0Lkg0LHQu9C+0Log0LIg0LTRgNGD0LPQvtC8INC60L7QvdGC0LXQudC90LXRgNC1XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGRpc3BsYXlDYXJkcyhbaXRlbV0sIGNhcmRzQ29udGFpbmVyMTYpO1xyXG5cdFx0XHRcdFx0ZGlzcGxheUNhcmRzKFtdLCBjYXJkc0NvbnRhaW5lcjgpOyAvLyDQn9GD0YHRgtC+0Lkg0LHQu9C+0Log0LIg0LTRgNGD0LPQvtC8INC60L7QvdGC0LXQudC90LXRgNC1XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0ZHJvcGRvd24uYXBwZW5kQ2hpbGQoZHJvcGRvd25JdGVtKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdGRyb3Bkb3duLnN0eWxlLmRpc3BsYXkgPSBmaWx0ZXJlZERhdGEubGVuZ3RoID8gXCJibG9ja1wiIDogXCJub25lXCI7XHJcblx0fSBlbHNlIHtcclxuXHRcdC8vINCf0L7QutCw0LfQsNGC0Ywg0LLRgdC1INC60LDRgNGC0L7Rh9C60LgsINC10YHQu9C4INC40L3Qv9GD0YIg0L/Rg9GB0YJcclxuXHRcdGRpc3BsYXlDYXJkcyhkYXRhOCwgY2FyZHNDb250YWluZXI4KTtcclxuXHRcdGRpc3BsYXlDYXJkcyhkYXRhMTYsIGNhcmRzQ29udGFpbmVyMTYpO1xyXG5cdFx0ZHJvcGRvd24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG5cdH1cclxufSk7XHJcblxyXG4vLyDQodC60YDRi9GC0Ywg0LLRi9C/0LDQtNCw0Y7RidC10LUg0LzQtdC90Y4g0L/RgNC4INC60LvQuNC60LUg0LLQvdC1INC40L3Qv9GD0YLQsFxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRpZiAoIWUudGFyZ2V0LmNsb3Nlc3QoXCIjc2VhcmNoSW5wdXRcIikpIHtcclxuXHRcdGRyb3Bkb3duLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuXHR9XHJcbn0pO1xyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0NBQUEsTUFBTSxLQUFLLEdBQUc7Q0FDZCxDQUFDO0NBQ0QsRUFBRSxFQUFFLEVBQUUsT0FBTztDQUNiLEVBQUUsSUFBSSxFQUFFLGFBQWE7Q0FDckIsRUFBRSxPQUFPLEVBQUUsNERBQTREO0NBQ3ZFLEVBQUUsU0FBUyxFQUFFLEdBQUc7Q0FDaEIsRUFBRTtDQUNGLENBQUM7Q0FDRCxFQUFFLEVBQUUsRUFBRSxPQUFPO0NBQ2IsRUFBRSxJ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
